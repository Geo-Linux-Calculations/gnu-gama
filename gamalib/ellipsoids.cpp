#include <cstring>
#include <gamalib/ellipsoids.h>

// This file was generated by GNU GaMa (program ellipsoids_xml 0.01)
// from http://www.gnu.org/software/gama/xml/ellipsoids.xml

#ifdef _MSC_VER
namespace std {}
#endif

using namespace std;

namespace GaMaLib {

const char * const gama_ellipsoid_caption[] = { "",
   "Airy ellipsoid 1830",
   "Australian National 1965",
   "Bessel ellipsoid 1841",
   "Clarke ellipsoid 1858 1st",
   "Clarke ellipsoid 1858 2nd",
   "Clarke ellipsoid 1866",
   "Clarke ellipsoid 1880",
   "Clarke ellipsoid 1880 (modified)",
   "Everest ellipsoid 1830",
   "Fisher 1960 spheroid 1st",
   "Fisher 1960 spheroid 2nd",
   "Geodetic Reference System 1980",
   "Helmert ellipsoid 1906",
   "International 1924 (Hayford 1909)",
   "Krassovski ellipsoid 1940",
   "Mercury spheroid 1960",
   "Schott 1900 spheroid",
   "South American Spheroid 1969",
   "World Geodetic System 1984"
};

int set(Ellipsoid* E, gama_ellipsoid T)
{
   switch(T) {
   case ellipsoid_airy :
      E->set_ab( 6377563.541, 6356257.053 );
      break;
   case ellipsoid_australian :
      E->set_af1( 6378160, 298.25 );
      break;
   case ellipsoid_bessel :
      E->set_ab( 6377397.15508, 6356078.96290 );
      break;
   case ellipsoid_clarke1858a :
      E->set_ab( 6378361, 6356685 );
      break;
   case ellipsoid_clarke1858b :
      E->set_ab( 6378558, 6355810 );
      break;
   case ellipsoid_clarke1866 :
      E->set_ab( 6378206.4, 6356583.8 );
      break;
   case ellipsoid_clarke1880 :
      E->set_ab( 6378316, 6356582 );
      break;
   case ellipsoid_clarke1880m :
      E->set_af1( 6378249.145, 293.465 );
      break;
   case ellipsoid_everest :
      E->set_ab( 6377276.348, 6356075.416 );
      break;
   case ellipsoid_fisher1960a :
      E->set_af1( 6378166.0, 298.3 );
      break;
   case ellipsoid_fisher1960b :
      E->set_af1( 6278155.0, 298.3 );
      break;
   case ellipsoid_grs80 :
      E->set_af( 6378137, 0.003352810681182 );
      break;
   case ellipsoid_helmert :
      E->set_af1( 6378200, 298.3 );
      break;
   case ellipsoid_international :
      E->set_af1( 6378388, 297 );
      break;
   case ellipsoid_krassovski :
      E->set_af1( 6378245, 298.3 );
      break;
   case ellipsoid_mercury :
      E->set_af1( 6378166, 298.3 );
      break;
   case ellipsoid_schott :
      E->set_af1( 6378157, 304.5 );
      break;
   case ellipsoid_sa1969 :
      E->set_af1( 6378160, 298.25 );
      break;
   case ellipsoid_wgs84 :
      E->set_af( 6378137, 0.003352810664747 );
      break;
   default :
      return 1;
   }

   return 0;
}

gama_ellipsoid ellipsoid(const char* s)
{
   gama_ellipsoid T = ellipsoid_unknown;

   if      (!strcmp("airy", s))  T = ellipsoid_airy;
   else if (!strcmp("australian", s))  T = ellipsoid_australian;
   else if (!strcmp("bessel", s))  T = ellipsoid_bessel;
   else if (!strcmp("clarke1858a", s))  T = ellipsoid_clarke1858a;
   else if (!strcmp("clarke1858b", s))  T = ellipsoid_clarke1858b;
   else if (!strcmp("clarke1866", s))  T = ellipsoid_clarke1866;
   else if (!strcmp("clarke1880", s))  T = ellipsoid_clarke1880;
   else if (!strcmp("clarke1880m", s))  T = ellipsoid_clarke1880m;
   else if (!strcmp("everest", s))  T = ellipsoid_everest;
   else if (!strcmp("fisher1960a", s))  T = ellipsoid_fisher1960a;
   else if (!strcmp("fisher1960b", s))  T = ellipsoid_fisher1960b;
   else if (!strcmp("grs80", s))  T = ellipsoid_grs80;
   else if (!strcmp("helmert", s))  T = ellipsoid_helmert;
   else if (!strcmp("international", s))  T = ellipsoid_international;
   else if (!strcmp("krassovski", s))  T = ellipsoid_krassovski;
   else if (!strcmp("mercury", s))  T = ellipsoid_mercury;
   else if (!strcmp("schott", s))  T = ellipsoid_schott;
   else if (!strcmp("sa1969", s))  T = ellipsoid_sa1969;
   else if (!strcmp("wgs84", s))  T = ellipsoid_wgs84;

   return T;
}

}   // namespace GaMaLib


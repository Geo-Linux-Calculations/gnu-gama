0.9.17 2002-03-19

       - bug in BandMat::cholDec() [ test "if (Tol > b0)..." failed if
         the first element of the matrix was zero; replaced by new test
         "if (Tol >= b0) ..."; Jan Pytel]

0.9.16 2002-02-22

       - added Mat<> / Vec<> iterators

0.9.15 2001-12-20

       - removed a bug in void SymMat::invert() [missing return statement 
         at the end of block for handling dimension 1; Leos Mervart] 
 
0.9.14 2001-10-25

       - removed bugs from TransMat;

0.9.13 2001-05-05

       - list initialisation for Mat<> and Vec<> 

0.9.12 2001-03-24

       GNU General Public Licence
       ##########################

0.9.11 2001-02-30

       - svd.h bug corrected (occasional problems with convergence)

0.9.10 2001-02-25

       - GNU Lesser General Public Licence

0.9.9  2001-01-18

       - corrected bug in VecBase::norm_Linf()
 
0.9.8  2000-08-17

       - explicit use of MemRep::iterator (and const_iterator) --- egcs 2.95.2

       s/VecBase<Float, Exc>::iterator/MemRep<Float, Exc>::iterator/g
       s/SymMat<Float, Exc>::iterator/MemRep<Float, Exc>::iterator/g
       s/TransVec<Float, Exc>::iterator/MemRep<Float, Exc>::iterator/g
       s/TransMat<Float, Exc>::iterator/MemRep<Float, Exc>::iterator/g
       s/Mat<Float, Exc>::iterator/MemRep<Float, Exc>::iterator/g
       s/Vec<Float, Exc>::iterator/MemRep<Float, Exc>::iterator/g

0.9.7  2000-03-24

       - removed implicit values of template arguments in declaration
       of TransMat in mat.h

0.9.6  2000-02-07

       - defined invert() for SymMat 

0.9.5  2000-02-02

       - new header file gmatvec.h for basic common matrix/vector classes
       - header file matsvd.h renamed to svd.h; matgso.h renamed to gso.h
       - header file matbase.h splited into matbase.h, mat.h and transmat.h
       - header file vecbase.h splited into vecbase.h, vec.h and transvec.h

       - added the following functions to gain better compatibility with
       GNU Goose / GALA:

          MatVecBase::operator/=(Float); 
          MatVecBase::set_all(Float);    // renamed from init(Float);
          MatVecBase::set_zero(); 

          VecBase::dot(const VecBase&) const;
          VecBase::length_sq() const;
          VecBase::length()    const;
          VecBase::norm_L1()   const;
          VecBase::norm_L2()   const;
          VecBase::norm_Linf() const;

          MatBase::min_rc() const;
          MatBase::max_rc() const;
          MatBase::set_diagonal(Float d)
          MatBase::set_identity();
          virtual MatBase::transpose();
          virtual MatBase::invert();

          Mat::transpose();       
          Mat::invert();

0.9.4  2000-02-01

       - rewritten function inv(Mat<>&) using SVD
       - added enumeration Singular in inderr.h  

0.9.3  2000-01-22

       number of allowed iterations in diagonalization of bidiagonal
       matrix in SVD raised from 30 to 300 (i.e. to infinity; 30 is
       not enough) 

0.9.2  2000-01-19

       MatVec template library renamed to gMatVec; reason - smeg knows

0.9.1  2000-01-01

       - forgotten built in type `double' in template

0.9.0  2000-01-01

       - new class Exception
       - default templates arguments (Float=double, Exc=Exception)
       - removed underscores from class names

0.8.0  1999-09-24

       in class SVD_ new names q_xx(), q_bb(), q_bx() of functions
       for computing weight coefficients (was cov_??)
        

0.7.3  1999-06-22

       added class GSO_ for solving linear least squares problems with
       possibly rank deficient matrices

0.7.2  1999-06-10

        added new enum value BadRegularization (inderr.h)

        SVD_::min_subset_x()

          added new test if (defect < n_min) ... BadRegularization
          in test if (s == 0) changed ZeroDivision to BadRegularization

        added test bool SVD_::lindep(Index) for linearly dependent columns

0.7.1  1999-05-17

        class Vec_ (vecbase.h): added missing operators

          Vec_& operator*=(Float f)       { mul(f, *this); return *this; }
          Vec_& operator+=(const Vec_ &x) { add(x, *this); return *this; }
          Vec_& operator-=(const Vec_ &x) { sub(x, *this); return *this; }



